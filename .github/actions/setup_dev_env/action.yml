name: Build InterSpec Dependencies
description: Sets up build environment, and builds InterSpec dependencies

runs:
  using: "composite"
  steps:
    - uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: amd64
        vsversion: 2022

    # Get CMake, see https://github.com/marketplace/actions/get-cmake
    - name: get-cmake
      uses: lukka/get-cmake@v3.24.3

    #Now go to using: https://github.com/marketplace/actions/run-cmake     
    - name: Print some info
      shell: cmd
      run: | 
        echo "The job was automatically triggered by a ${{ github.event_name }} event."
        echo "This job is now running on a ${{ runner.os }} server hosted by GitHub"
        echo "Building branch ${{ github.ref }} of repository ${{ github.repository }}."
        echo "The ${{ github.repository }} repository has been cloned to the runner."
        echo "The files in the repository:
        ls ${{ github.workspace }}
  
    - name: Cache Windows Dependencies
      if: runner.os == 'Windows'
      id: cache-deps
      uses: actions/cache@v3
      with:
        path: '${{runner.temp}}/install'
        key: ${{ runner.os }}-dependencies-${{ hashFiles('${{ github.workspace }}/source-code/tools/build_cl_dependencies_msvc2022.bat') }}

# TODO: dep_build_msvc2022.bat seems to work just fine from PowerShell, so we should really switch to just always using that to be consistent across platforms
    - name: Build dependencies on windows
      shell: cmd
      if: steps.cache-deps.outputs.cache-hit != 'true' && runner.os == 'Windows'
      working-directory: ${{runner.temp}}
      run: |
        echo github.event.action: ${{ github.event.action }}
        echo github.event_name: ${{ github.event_name }}
        echo github.workflow: ${{ github.workflow }}
        ${{ github.workspace }}\source-code\tools\build_cl_dependencies_msvc2022.bat "${{runner.temp}}\dep_build" "${{runner.temp}}\install"


    - name: List files in prefix
      shell: pwsh
      run: |
        echo "In Install"
        ls '${{runner.temp}}/install'
        echo "In Install/lib"
        ls '${{runner.temp}}/install/lib'
        echo "In Install/include"
        ls '${{runner.temp}}/install/include'
        echo "In Install/bin"
        ls '${{runner.temp}}/install/bin'
        echo github.event.action: ${{ github.event.action }}
        echo github.event_name: ${{ github.event_name }}
        echo github.workflow: ${{ github.workflow }}





