name: Build App

on:
  push:
    branches:
      - master

concurrency: ci-${{ github.ref }}

jobs:
  
  build-cl-app:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config: 
        - {
            name: "Windows Latest MSVC-2022",
            os: windows-latest,
            artifact: "windows_msvc2022.7z",
            build_type: "Release",
            cc: "cl",
            cxx: "cl",
            archiver: "7z a",
            generators: "Visual Studio 17 2022"
          }


    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          path: ${{ github.workspace }}/source-code
          submodules: true # Recursively checkout submodules
    
      - name: Setup Dev Env 
        uses: ./source-code/.github/actions/setup_dev_env
    
      

      # Update the bleeding-edge tag to be current commit
      - name: Run latest-tag
        uses: EndBug/latest-tag@v1.6.1
        with:
          ref: bleeding-edge
          description: Latest successful automated CL build

      - name: Create Release
        uses: ncipollo/release-action@v1.13.0
        with:
          artifacts: '${{runner.temp}}\build_${{ runner.os }}_cl\cambio_cl_${{ runner.os }}*.zip'
          draft: false
          prerelease: true
          body: "An automated, and untested build of the "command line" version of cambio, with the latest code pushed to the repository, for Windows."
          allowUpdates: true
          generateReleaseNotes: false
          name: "Development Build"
          removeArtifacts: true
          replacesArtifacts: true
          tag: 'bleeding-edge'
          commit: ${{ github.sha }}
          makeLatest: true


      - name: "Cleanup and finish"
        run: |
          Get-ChildItem cambio_cl_${{ runner.os }}*.zip | foreach { Remove-Item -Path $_.FullName }
          echo "Job status is ${{ job.status }}."



